from django.db import migrations


def forwards_func(apps, schema_editor):
    Category = apps.get_model("expenses", "Category")
    CategoryAlias = apps.get_model("expenses", "CategoryAlias")

    data = {
        "Аренда квартиры": [
            "Квартира", "Аренда", "Жильё", "Ипотека", "Найм", "Аренда квартиры",
        ],
        "Коммунальные услуги": [
            "Коммуналка", "Жку", "Свет", "Газ", "Вода", "Квартплата", "Отопление",
        ],
        "Еда": [
            "Чижик Бакалея В Основном", "Еда", "Продукты", "Перекус", "Кофе", "Вода", "Супермаркет", "Чижик",
            "Пятерочка", "Перекус в тц", "Овощи", "Овощники", "Бакалея", "Магнит",
            "Вкусвилл",
        ],
        "Транспорт": [
            "Транспорт", "Метро", "Мцд", "Мцк", "Автобус", "Проезд", "Маршрутка",
            "Электричка", "Такси", "Яндекс Go", "Uber", "Каршеринг",
        ],
        "Развлечения": [
            "Кино", "Билеты", "Попкорн", "Попкормовый", "Бар", "Кальян", "Игра",
            "Игры", "Приставка", "Тусовка", "Концерт", "Приколясы", "Приколы",
            "Кайф", "Лудомания", "Развлечения",
        ],
        "Связь": [
            "Мтс Тебе", "Тебе Мтс", "Тебе Билайн", "Тебе Теле2", "Тебе Йота", "Тебе Мегафон", "Тебе Интернет",
            "Связь", "Мтс", "Билайн", "Теле2", "Йота", "Мегафон", "Интернет",
            "Мобильный", "Тариф", "Счёт за телефон",
        ],
        "Подписки": [
            "Подписка", "Netflix", "Нетфликс", "Spotify", "Спотифай", "Youtube",
            "Ютуб", "Кинопоиск", "Apple Music", "Yandex Music", "Okko", "Ivi",
            "Подписка Лоховска", "Wink",
        ],
        "Личное": [
            "Стрижка", "Парикмахер", "Маникюр", "Косметика", "Уход", "Одежда",
            "Обувь", "Шмотки",
        ],
        "Здоровье": [
            "Аптека", "Лекарства", "Таблетки", "Врач", "Стоматолог", "Массаж",
            "Анализы", "Медицинское", "Поликлиника", "Больница",
        ],
        "Штрафы и налоги": [
            "Штраф", "Штрафы", "Налог", "Налоги", "Госпошлина", "Гаи", "Дпс",
        ],
        "IT и цифровые сервисы": [
            "Прокси", "Vpn", "Сервер", "Хостинг", "Облако", "Digitalocean",
            "Hetzner", "Aws", "Azure", "Google Cloud",
        ],
        "Спорт": [
            "Спорт", "Фитнес", "Тренажерка", "Тренировка", "Абонемент",
            "Хоккей", "Бассейн", "Зал", "Йога", "Футбол",
        ],
        "Домашние животные": [
            "Животные", "Кот", "Собака", "Корм", "Вет", "Ветеринар",
            "Игрушки для животных", "Вакцинация", "Лоток", "Аквариум", "Попугай",
        ],
        "Прочее": [
            "Прочее", "Другое", "Разное",
        ],
    }

    categories = [Category(name=name) for name in data.keys()]
    Category.objects.bulk_create(categories, ignore_conflicts=True)

    existing_categories = {c.name: c for c in Category.objects.all()}

    aliases = []
    for category_name, alias_list in data.items():
        category = existing_categories.get(category_name)
        if category:
            aliases.extend(
                [CategoryAlias(category=category, alias=alias.title()) for alias in alias_list]
            )

    CategoryAlias.objects.bulk_create(aliases, ignore_conflicts=True)


def reverse_func(apps, schema_editor):
    Category = apps.get_model("expenses", "Category")
    CategoryAlias = apps.get_model("expenses", "CategoryAlias")

    aliases_to_remove = [
        "Квартира", "Аренда", "Жильё", "Ипотека", "Найм", "Аренда квартиры",
        "Коммуналка", "Жку", "Свет", "Газ", "Вода", "Квартплата", "Отопление",
        "Еда", "Продукты", "Перекус", "Кофе", "Вода", "Супермаркет", "Чижик",
        "Пятерочка", "Перекус в тц", "Овощи", "Овощники", "Бакалея", "Магнит",
        "Вкусвилл",
        "Транспорт", "Метро", "Мцд", "Мцк", "Автобус", "Проезд", "Маршрутка",
        "Электричка", "Такси", "Яндекс Go", "Uber", "Каршеринг",
        "Кино", "Билеты", "Попкорн", "Попкормовый", "Бар", "Кальян", "Игра",
        "Игры", "Приставка", "Тусовка", "Концерт", "Приколясы", "Приколы",
        "Кайф", "Лудомания", "Развлечения",
        "Связь", "Мтс", "Билайн", "Теле2", "Йота", "Мегафон", "Интернет",
        "Мобильный", "Тариф", "Счёт за телефон",
        "Подписка", "Netflix", "Нетфликс", "Spotify", "Спотифай", "Youtube",
        "Ютуб", "Кинопоиск", "Apple Music", "Yandex Music", "Okko", "Ivi",
        "Подписка Лоховска", "Wink",
        "Стрижка", "Парикмахер", "Маникюр", "Косметика", "Уход", "Одежда",
        "Обувь", "Шмотки",
        "Аптека", "Лекарства", "Таблетки", "Врач", "Стоматолог", "Массаж",
        "Анализы", "Медицинское", "Поликлиника", "Больница",
        "Штраф", "Штрафы", "Налог", "Налоги", "Госпошлина", "Гаи", "Дпс",
        "Прокси", "Vpn", "Сервер", "Хостинг", "Облако", "Digitalocean",
        "Hetzner", "Aws", "Azure", "Google Cloud",
        "Спорт", "Фитнес", "Тренажерка", "Тренировка", "Абонемент", "Хоккей",
        "Бассейн", "Зал", "Йога", "Футбол",
        "Животные", "Кот", "Собака", "Корм", "Вет", "Ветеринар", "Игрушки для животных",
        "Вакцинация", "Лоток", "Аквариум", "Попугай",
        "Прочее", "Другое", "Разное",
    ]

    CategoryAlias.objects.filter(alias__in=aliases_to_remove).delete()
    Category.objects.filter(
        name__in=[
            "Аренда квартиры", "Коммунальные услуги", "Еда", "Транспорт",
            "Развлечения", "Связь", "Подписки", "Личное", "Здоровье",
            "Штрафы и налоги", "IT и цифровые сервисы", "Спорт",
            "Домашние животные", "Прочее",
        ]
    ).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("expenses", "0007_add_more_categories"),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
