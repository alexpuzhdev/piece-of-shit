from django.db import migrations


def forwards_func(apps, schema_editor):
    Category = apps.get_model("expenses", "Category")
    CategoryAlias = apps.get_model("expenses", "CategoryAlias")

    data = {
        "Еда": [
            "Пятерка", "Пятёрка", "Пятишка", "Чижик", "Чизик",
            "Магнит", "Вкусвил", "Вкусвилл", "Перекусик", "Перекус в тц",
            "Вода в пятишки", "Продукты немножко из пятерки",
        ],
        "Развлечения": [
            "Приколясы", "Приколясы в кругляке", "Прикол", "Кайф",
            "Лудомания", "Попкорм", "Попкормовый", "Киношки", "Кинчик",
        ],
        "Связь": [
            "Мтс", "Мтц", "Мтш", "Теле2", "Теле-2", "Билаин", "Йота", "Ёта",
            "Мегафон", "Мегаф", "Интернетик", "Симка",
        ],
        "Подписки": [
            "Нетфликс", "Нетфликсик", "Netflix", "Спотифай", "Спотик",
            "Spotify", "Ютуб", "Youtube", "Кинопоиск", "КиноПоиск HD",
            "Амедиатека", "Окко", "Иви", "Wink", "Apple Music", "Яндекс Музыка",
        ],
        "Здоровье": [
            "Массажик", "Массаж", "Таблы", "Таблетосы", "Аптека",
            "Аптечка", "Лекарство", "Стоматология", "Стома",
        ],
        "Личное": [
            "Парик", "Парикмахер", "Стрижка", "Маник", "Маникюр",
            "Шмот", "Шмотки", "Одежка", "Косметоз", "Косметика",
        ],
        "Транспорт": [
            "Проезд", "Метро", "Мцд", "Мцк", "Электричка", "Маршрутка",
            "Автобус", "Такса", "Таксик", "Такси", "Яша", "Яндекс Go",
        ],
        "Аренда квартиры": [
            "Квартира", "Хата", "Хатка", "Аренда", "Ипотека",
        ],
        "Спорт": [
            "Фитнес", "Фитнесик", "Зал", "Спортзал", "Бассейн",
            "Хоккей", "Футбол", "Йога", "Тренажерка",
        ],
        "Домашние животные": [
            "Кот", "Котик", "Собака", "Собачка", "Пёс", "Пёсель",
            "Корм", "Кормёжка", "Вет", "Ветеринар", "Ветка", "Животинка",
        ],
    }

    aliases = []
    for category_name, alias_list in data.items():
        try:
            category = Category.objects.get(name=category_name)
        except Category.DoesNotExist:
            continue
        for alias in alias_list:
            aliases.append(CategoryAlias(category=category, alias=alias.title()))

    CategoryAlias.objects.bulk_create(aliases, ignore_conflicts=True)


def reverse_func(apps, schema_editor):
    CategoryAlias = apps.get_model("expenses", "CategoryAlias")

    to_delete = [
        "Пятерка", "Пятёрка", "Пятишка", "Чижик", "Чизик",
        "Магнит", "Вкусвил", "Вкусвилл", "Перекусик", "Перекус в тц",
        "Вода в пятишки", "Продукты немножко из пятерки",
        "Приколясы", "Приколясы в кругляке", "Прикол", "Кайф",
        "Лудомания", "Попкорм", "Попкормовый", "Киношки", "Кинчик",
        "Мтс", "Мтц", "Мтш", "Теле2", "Теле-2", "Билаин", "Йота", "Ёта",
        "Мегафон", "Мегаф", "Интернетик", "Симка",
        "Нетфликс", "Нетфликсик", "Netflix", "Спотифай", "Спотик",
        "Spotify", "Ютуб", "Youtube", "Кинопоиск", "КиноПоиск Hd",
        "Амедиатека", "Окко", "Иви", "Wink", "Apple Music", "Яндекс Музыка",
        "Массажик", "Таблы", "Таблетосы", "Аптечка", "Лекарство",
        "Стоматология", "Стома",
        "Парик", "Маник", "Шмот", "Одежка", "Косметоз",
        "Такса", "Таксик", "Яша",
        "Хата", "Хатка",
        "Фитнесик", "Спортзал", "Тренажерка",
        "Котик", "Собачка", "Пёс", "Пёсель", "Кормёжка", "Ветка", "Животинка",
    ]

    CategoryAlias.objects.filter(alias__in=[a.title() for a in to_delete]).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("expenses", "0008_add_more_more_catagories"),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
